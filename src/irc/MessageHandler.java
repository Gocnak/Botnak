package irc;

/**
 * Created by Nick on 3/30/2014.
 */
public abstract class MessageHandler {
    /**
     * This method is called whenever a message is sent to a channel.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param channel The channel to which the message was sent.
     * @param sender  The nick of the person who sent the message.
     * @param message The actual message sent to the channel.
     */
    public void onMessage(String channel, String sender, String message) {
    }


    /**
     * This method catches the new subscriber for a certain channel
     * that the user "twitchnotify" sends to the channel when
     * the recipient (newSub) subscribes to the channel.
     *
     * @param channel The channel the new subscriber subscribed to.
     * @param newSub  The new subscriber's nick.
     */
    public void onNewSubscriber(String channel, String newSub) {
    }

    /**
     * This method is called whenever a private message is sent to the PircBot.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     * <p/>
     * This is used when JTV sends its messages about who's op, subscriber, etc.
     *
     * @param sender   The nick of the person who sent the private message.
     * @param login    The login of the person who sent the private message.
     * @param hostname The hostname of the person who sent the private message.
     * @param message  The actual message.
     */
    public void onPrivateMessage(String sender, String login, String hostname, String message) {
    }


    /**
     * This is called when the chat is cleared. This is used for a crude
     * ban detection, or just the chat being cleared in general.
     * <p/>
     * This can return "CLEARCHAT user" or "CLEARCHAT"
     *
     * @param line The "CLEARCHAT" line.
     */
    public void onClearChat(String channel, String line) {
    }


    /**
     * This method is called whenever an ACTION is sent from a user.  E.g.
     * such events generated by typing "/me goes shopping" in most IRC clients.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param sender The nick of the user that sent the action.
     * @param target The target of the action, be it a channel or our nick.
     * @param action The action carried out by the user.
     */
    public void onAction(String sender, String target, String action) {
    }


    /**
     * This method is called whenever someone (possibly us) joins a channel
     * which we are on.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param channel The channel which somebody joined.
     * @param sender  The nick of the user who joined the channel.
     */
    public void onJoin(String channel, String sender) {
    }


    /**
     * This method is called whenever someone (possibly us) parts a channel
     * which we are on.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param channel  The channel which somebody parted from.
     * @param userNick The nick of the user who parted from the channel.
     */
    public void onPart(String channel, String userNick) {
    }

    /**
     * Called when a user (possibly us) gets granted operator status for a channel.
     * <p/>
     * This is a type of mode change and is also passed to the onMode
     * method in the PircBot class.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param channel   The channel in which the mode change took place.
     * @param recipient The nick of the user that got 'opped'.
     * @since PircBot 0.9.5
     */
    public void onOp(String channel, String recipient) {
    }


    /**
     * Called when a user (possibly us) gets operator status taken away.
     * <p/>
     * This is a type of mode change and is also passed to the onMode
     * method in the PircBot class.
     * <p/>
     * The implementation of this method in the PircBot abstract class
     * performs no actions and may be overridden as required.
     *
     * @param channel   The channel in which the mode change took place.
     * @param recipient The nick of the user that got 'deopped'.
     * @since PircBot 0.9.5
     */
    public void onDeop(String channel, String recipient) {
    }
}
